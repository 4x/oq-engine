/*
 * [COPYRIGHT]
 *
 * [NAME] is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

package org.gem.engine.risk.data.builder;

import java.util.HashMap;
import java.util.Map;

import org.gem.engine.risk.data.DiscreteVulnerabilityFunction;

public class DiscreteVulnerabilityFunctionBuilder
{

    private String IMT;
    private String code;
    private String type;

    private Map<Double, Double> values;
    private DiscreteVulnerabilityFunction function;

    public static DiscreteVulnerabilityFunctionBuilder aFunction()
    {
        return new DiscreteVulnerabilityFunctionBuilder();
    }

    private DiscreteVulnerabilityFunctionBuilder()
    {
        values = new HashMap<Double, Double>();
    }

    public DiscreteVulnerabilityFunctionBuilder withPair(double IML, double value)
    {
        values.put(IML, value);

        return this;
    }

    public DiscreteVulnerabilityFunctionBuilder withCode(String code)
    {
        this.code = code;

        return this;
    }

    public DiscreteVulnerabilityFunction build()
    {
        function = new DiscreteVulnerabilityFunction(code, null, null, type, IMT);

        for (Double key : values.keySet())
        {
            function.addPair(key, values.get(key));
        }

        return function;
    }

    public DiscreteVulnerabilityFunctionBuilder ofType(String type)
    {
        this.type = type;

        return this;
    }

    public DiscreteVulnerabilityFunctionBuilder withIMT(String IMT)
    {
        this.IMT = IMT;

        return this;
    }

}
